"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4981],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,g=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?a.createElement(g,c(c({ref:t},l),{},{components:n})):a.createElement(g,c({ref:t},l))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,c[1]=i;for(var d=2;d<o;d++)c[d]=n[d];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4719:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));n(2389);const o={},c="Execute",i={unversionedId:"lang/execute",id:"lang/execute",title:"Execute",description:"Defining exec Messages",source:"@site/docs/lang/execute.mdx",sourceDirName:"lang",slug:"/lang/execute",permalink:"/cwscript-docs/docs/lang/execute",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/lang/execute.mdx",tags:[],version:"current",frontMatter:{},sidebar:"langSidebar",previous:{title:"Events",permalink:"/cwscript-docs/docs/lang/events"},next:{title:"Functions",permalink:"/cwscript-docs/docs/lang/functions"}},s={},d=[{value:"Defining <code>exec</code> Messages",id:"defining-exec-messages",level:2},{value:"Building <code>exec</code> Messages",id:"building-exec-messages",level:2},{value:"Without Contract Address",id:"without-contract-address",level:3},{value:"With Contract Address",id:"with-contract-address",level:3},{value:"The <code>exec!</code> Keyword",id:"the-exec-keyword",level:2},{value:"SYNTAX",id:"syntax",level:4},{value:"EXAMPLE",id:"example",level:4},{value:"Options for <code>exec!</code>",id:"options-for-exec",level:3},{value:"Deferred <code>exec!</code>",id:"deferred-exec",level:3}],l={toc:d},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"execute"},"Execute"),(0,r.kt)("h2",{id:"defining-exec-messages"},"Defining ",(0,r.kt)("inlineCode",{parentName:"h2"},"exec")," Messages"),(0,r.kt)("p",null,"Inside a contract definition, you can define ",(0,r.kt)("inlineCode",{parentName:"p"},"exec")," messages using the ",(0,r.kt)("inlineCode",{parentName:"p"},"exec")," keyword. Note that the ",(0,r.kt)("inlineCode",{parentName:"p"},"exec")," message's name must be prefixed with ",(0,r.kt)("inlineCode",{parentName:"p"},"#"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cwscript"},"contract MyContract {\n\n  state {\n    count: Int = 0\n  }\n\n  exec #increment(num: Int = 1) {\n    $state.count += num\n  }\n}\n")),(0,r.kt)("h2",{id:"building-exec-messages"},"Building ",(0,r.kt)("inlineCode",{parentName:"h2"},"exec")," Messages"),(0,r.kt)("p",null,"You can build an ",(0,r.kt)("inlineCode",{parentName:"p"},"exec")," message without calling it by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"exec")," keyword.\nThis is useful for building a message to be called later, or storing it as data."),(0,r.kt)("h3",{id:"without-contract-address"},"Without Contract Address"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cwscript"},"let msg = exec MyContract.#increment(5)\nassert! msg is exec MyContract.#increment\n\n// to call it later\nexec! Wasm.#execute(contract_addr, msg)\n")),(0,r.kt)("h3",{id:"with-contract-address"},"With Contract Address"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cwscript"},"let msg = exec MyContract(contract_addr).#increment(5)\nassert! msg is exec Wasm.#execute\n\n// to call it later\nexec! msg\n")),(0,r.kt)("h2",{id:"the-exec-keyword"},"The ",(0,r.kt)("inlineCode",{parentName:"h2"},"exec!")," Keyword"),(0,r.kt)("p",null,"You can call ",(0,r.kt)("inlineCode",{parentName:"p"},"exec")," messages on other contracts using the ",(0,r.kt)("inlineCode",{parentName:"p"},"exec!")," keyword.\nNote that ",(0,r.kt)("inlineCode",{parentName:"p"},"exec!")," keyword can only be used inside ",(0,r.kt)("inlineCode",{parentName:"p"},"instantiate"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"exec"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"reply.on_success"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"reply.on_error")," contexts."),(0,r.kt)("h4",{id:"syntax"},"SYNTAX"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cwscript"},"exec! <message> [{\n  <options>\n}]\n")),(0,r.kt)("h4",{id:"example"},"EXAMPLE"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cwscript"},"contract ExecExample {\n  exec #distribute(amount: Uint) {\n    exec! CW20(token_addr).#transfer(user1_addr, amount / 2)\n    exec! CW20(token_addr).#transfer(user2_addr, amount / 2)\n  }\n}\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You can assign a variable to be a contract reference to avoid repetition:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-cwscript"},"contract ExecExample {\n  exec #distribute(amount: Uint) {\n    let token = CW20(token_addr)\n    exec! token.#transfer(user1_addr, amount / 2)\n    exec! token.#transfer(user2_addr, amount / 2)\n  }\n}\n"))),(0,r.kt)("h3",{id:"options-for-exec"},"Options for ",(0,r.kt)("inlineCode",{parentName:"h3"},"exec!")),(0,r.kt)("p",null,"You can specify options ",(0,r.kt)("inlineCode",{parentName:"p"},"exec!")," messages after the message inside curly braces.\nNote that options specified at this level will override any existing options in the message."),(0,r.kt)("p",null,"If a contract instance object was used to create the message and the ",(0,r.kt)("inlineCode",{parentName:"p"},"contract_addr")," option is specified in an ",(0,r.kt)("inlineCode",{parentName:"p"},"exec!"),", the contract address of the message will be overridden."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"contract_addr"),": The contract address to send the message to."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"funds"),": The funds to send with the message.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cwscript"},'contract SendFunds {\n  exec #send_funds(amount: Uint) {\n    exec! CW20.#transfer(user1_addr, amount / 2) {\n      contract_addr: token_addr, // contract address to send the message to\n      funds: Coins("10000uluna") // funds to send with the message\n    }\n  }\n}\n')),(0,r.kt)("h3",{id:"deferred-exec"},"Deferred ",(0,r.kt)("inlineCode",{parentName:"h3"},"exec!")),(0,r.kt)("p",null,"After using the ",(0,r.kt)("inlineCode",{parentName:"p"},"exec!")," keyword, you cannot perform further updates to ",(0,r.kt)("inlineCode",{parentName:"p"},"$state"),". In order to work around this, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"defer")," keyword before ",(0,r.kt)("inlineCode",{parentName:"p"},"exec!"),", which delays the execution until the end by appending the message to a queue in the order it was called."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cwscript"},"contract DeferExecExample {\n  exec #distribute(amount: Uint) {\n    defer exec! CW20(token_addr).#transfer(user1_addr, amount / 2)\n    $state.balance -= amount / 2\n    defer exec! CW20(token_addr).#transfer(user2_addr, amount / 2)\n    $state.balance -= amount / 2\n  }\n}\n")))}u.isMDXComponent=!0}}]);