"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9103],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),c=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(p.Provider,{value:n},e.children)},s="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(t),m=r,d=s["".concat(p,".").concat(m)]||s[m]||f[m]||i;return t?a.createElement(d,o(o({ref:n},u),{},{components:t})):a.createElement(d,o({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[s]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2069:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const i={},o="Functions",l={unversionedId:"lang/functions",id:"lang/functions",title:"Functions",description:"In CWScript, functions are defined using the fn keyword.",source:"@site/docs/lang/functions.mdx",sourceDirName:"lang",slug:"/lang/functions",permalink:"/docs/lang/functions",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/lang/functions.mdx",tags:[],version:"current",frontMatter:{},sidebar:"langSidebar",previous:{title:"Execute",permalink:"/docs/lang/execute"},next:{title:"Importing",permalink:"/docs/lang/importing"}},p={},c=[{value:"Fallible Functions",id:"fallible-functions",level:2},{value:"Optional Parameters",id:"optional-parameters",level:2},{value:"Optional with Default Value",id:"optional-with-default-value",level:3},{value:"Generic Functions",id:"generic-functions",level:2}],u={toc:c},s="wrapper";function f(e){let{components:n,...t}=e;return(0,r.kt)(s,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"functions"},"Functions"),(0,r.kt)("p",null,"In CWScript, ",(0,r.kt)("strong",{parentName:"p"},"functions")," are defined using the ",(0,r.kt)("inlineCode",{parentName:"p"},"fn")," keyword."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cwscript"},"fn function_name(param1: Bool, param2: Int) -> Int {\n    return param1 ? param2 : 0\n}\n")),(0,r.kt)("h2",{id:"fallible-functions"},"Fallible Functions"),(0,r.kt)("p",null,"In CWScript, a ",(0,r.kt)("em",{parentName:"p"},"fallible function")," is a function that may fail with an error.\nYou can only call a fallible function inside other fallible functions or special contract entrypoints."),(0,r.kt)("p",null,"To define a fallible function, add a ",(0,r.kt)("inlineCode",{parentName:"p"},"!")," to the end of the function name."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You should consider the ",(0,r.kt)("inlineCode",{parentName:"p"},"!")," as part of the function's name -- i.e. ",(0,r.kt)("inlineCode",{parentName:"p"},"fn foo!")," is a different function than ",(0,r.kt)("inlineCode",{parentName:"p"},"fn foo"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cwscript"},"fn parse_number!(s: String) -> Int {\n  // can fail with an error\n}\n")),(0,r.kt)("h2",{id:"optional-parameters"},"Optional Parameters"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"An optional parameter is a parameter of type ",(0,r.kt)("inlineCode",{parentName:"p"},"T?")," with a default value of ",(0,r.kt)("inlineCode",{parentName:"p"},"None"),".")),(0,r.kt)("p",null,"You can make a parameter optional by adding a ",(0,r.kt)("inlineCode",{parentName:"p"},"?")," to the end of the parameter name."),(0,r.kt)("p",null,"Optional parameters must come AFTER all required parameters in the function signature.\nBy default, optional parameters are ",(0,r.kt)("inlineCode",{parentName:"p"},"None")," if omitted."),(0,r.kt)("p",null,"The type of the parameter will be ",(0,r.kt)("inlineCode",{parentName:"p"},"T?"),", where ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," is the type of the parameter."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cwscript"},"fn foo(a: Int, b?: Int) -> Int {\n  return a + b\n}\n")),(0,r.kt)("h3",{id:"optional-with-default-value"},"Optional with Default Value"),(0,r.kt)("p",null,"You can also specify a default value for a parameter, which will be used if the parameter is omitted.\nThis is done by adding an ",(0,r.kt)("inlineCode",{parentName:"p"},"=")," after the parameter name, followed by the default value."),(0,r.kt)("p",null,"Default values must come AFTER all required parameters in the function signature."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cwscript"},"fn foo(a: Int, b: Int = 0) -> Int {\n  return a + b\n}\n")),(0,r.kt)("h2",{id:"generic-functions"},"Generic Functions"),(0,r.kt)("p",null,"A ",(0,r.kt)("em",{parentName:"p"},"generic function")," is a function that can operate on a variety of data types without the need to define a separate function for each type."),(0,r.kt)("p",null,"You can make a function generic by adding type parameters enclosed in ",(0,r.kt)("inlineCode",{parentName:"p"},"<")," and ",(0,r.kt)("inlineCode",{parentName:"p"},">")," after the function name."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cwscript"},"fn id<T>(a: T) -> T {\n  return a\n}\n\n// fallible generic function\nfn parse!<T>(s: String) -> T {\n  // can fail with an error\n}\n")))}f.isMDXComponent=!0}}]);