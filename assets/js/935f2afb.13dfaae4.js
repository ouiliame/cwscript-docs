"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction","href":"/docs/intro","docId":"intro"},{"type":"link","label":"Getting Started","href":"/docs/installation","docId":"installation"},{"type":"category","label":"Tutorial","items":[{"type":"link","label":"Part 1: My First Contract","href":"/docs/tutorial/pt1","docId":"tutorial/pt1"},{"type":"link","label":"Part 2: Custom Token & NFT","href":"/docs/tutorial/pt2","docId":"tutorial/pt2"},{"type":"link","label":"Part 3: Tic-Tac-Toe Tournament","href":"/docs/tutorial/pt3","docId":"tutorial/pt3"},{"type":"link","label":"Part 4: Web UI","href":"/docs/tutorial/pt4","docId":"tutorial/pt4"}],"collapsed":false,"collapsible":true},{"type":"category","label":"Using the Compiler","items":[{"type":"link","label":"Introduction","href":"/docs/cwsc/","docId":"cwsc/README"},{"type":"category","label":"Commands","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"build","href":"/docs/cwsc/commands/build","docId":"cwsc/commands/build"}],"href":"/docs/category/commands"}],"collapsed":false,"collapsible":true}],"langSidebar":[{"type":"link","label":"Grammar","href":"/docs/lang/grammar/","docId":"lang/grammar/grammar"},{"type":"link","label":"Context Variables","href":"/docs/lang/context-vars","docId":"lang/context-vars"},{"type":"link","label":"Contracts","href":"/docs/lang/contracts","docId":"lang/contracts"},{"type":"link","label":"Errors","href":"/docs/lang/errors","docId":"lang/errors"},{"type":"link","label":"Events","href":"/docs/lang/events","docId":"lang/events"},{"type":"link","label":"Execute","href":"/docs/lang/execute","docId":"lang/execute"},{"type":"link","label":"Functions","href":"/docs/lang/functions","docId":"lang/functions"},{"type":"link","label":"Importing","href":"/docs/lang/importing","docId":"lang/importing"},{"type":"link","label":"Instantiate","href":"/docs/lang/instantiate","docId":"lang/instantiate"},{"type":"link","label":"Interfaces","href":"/docs/lang/interfaces","docId":"lang/interfaces"},{"type":"link","label":"Module Contracts","href":"/docs/lang/module-contracts.mdx","docId":"lang/module-contracts.mdx"},{"type":"link","label":"Query","href":"/docs/lang/query","docId":"lang/query"},{"type":"category","label":"types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Address","href":"/docs/lang/types/address","docId":"lang/types/address"},{"type":"link","label":"String","href":"/docs/lang/types/string","docId":"lang/types/string"}]}],"examplesSidebar":[{"type":"link","label":"CW20","href":"/docs/examples/CW20","docId":"examples/CW20"},{"type":"category","label":"Injective","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Atomic Order","href":"/docs/examples/Injective/AtomicOrderExample","docId":"examples/Injective/AtomicOrderExample"}]},{"type":"category","label":"Terraswap","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Factory","href":"/docs/examples/Terraswap/TerraswapFactory","docId":"examples/Terraswap/TerraswapFactory"},{"type":"link","label":"Pair","href":"/docs/examples/Terraswap/TerraswapPair","docId":"examples/Terraswap/TerraswapPair"},{"type":"link","label":"Token","href":"/docs/examples/Terraswap/TerraswapToken","docId":"examples/Terraswap/TerraswapToken"}]}]},"docs":{"cwsc/commands/build":{"id":"cwsc/commands/build","title":"build","description":"Compile project to Rust / WASM.","sidebar":"docsSidebar"},"cwsc/README":{"id":"cwsc/README","title":"Introduction","description":"cwsc is the compiler for CWScript.","sidebar":"docsSidebar"},"examples/CW20":{"id":"examples/CW20","title":"CW20","description":"","sidebar":"examplesSidebar"},"examples/Injective/AtomicOrderExample":{"id":"examples/Injective/AtomicOrderExample","title":"Atomic Order","description":"","sidebar":"examplesSidebar"},"examples/Terraswap/TerraswapFactory":{"id":"examples/Terraswap/TerraswapFactory","title":"Factory","description":"","sidebar":"examplesSidebar"},"examples/Terraswap/TerraswapPair":{"id":"examples/Terraswap/TerraswapPair","title":"Pair","description":"","sidebar":"examplesSidebar"},"examples/Terraswap/TerraswapToken":{"id":"examples/Terraswap/TerraswapToken","title":"Token","description":"","sidebar":"examplesSidebar"},"installation":{"id":"installation","title":"Getting Started","description":"","sidebar":"docsSidebar"},"intro":{"id":"intro","title":"Introduction","description":"CWScript is a programming language specifically designed for developing CosmWasm smart contracts. It aims to simplify","sidebar":"docsSidebar"},"lang/context-vars":{"id":"lang/context-vars","title":"Context Variables","description":"The following variables are available in different contexts of a contract\'s execution.","sidebar":"langSidebar"},"lang/contracts":{"id":"lang/contracts","title":"Contracts","description":"Contracts are the primary logical units of a CWScript project, and are defined similarly to classes in object-oriented programming languages.","sidebar":"langSidebar"},"lang/errors":{"id":"lang/errors","title":"Errors","description":"In CWScript, errors are a special type of value used to indicate that something went wrong.","sidebar":"langSidebar"},"lang/events":{"id":"lang/events","title":"Events","description":"An event is a special type of structured data that can be emitted by contracts to indicate that something of interest has occured.","sidebar":"langSidebar"},"lang/execute":{"id":"lang/execute","title":"Execute","description":"Defining exec Messages","sidebar":"langSidebar"},"lang/functions":{"id":"lang/functions","title":"Functions","description":"In CWScript, functions are defined using the fn keyword.","sidebar":"langSidebar"},"lang/grammar/grammar":{"id":"lang/grammar/grammar","title":"Grammar","description":"The following code listing is the ANTLR4 grammar for the CWScript language, which is used to generate the initial parser in the CWScript compiler.","sidebar":"langSidebar"},"lang/importing":{"id":"lang/importing","title":"Importing","description":"","sidebar":"langSidebar"},"lang/instantiate":{"id":"lang/instantiate","title":"Instantiate","description":"Defining instantiate","sidebar":"langSidebar"},"lang/interfaces":{"id":"lang/interfaces","title":"Interfaces","description":"An interface is a set of required entrypoint messages that a contract must implement.","sidebar":"langSidebar"},"lang/module-contracts.mdx":{"id":"lang/module-contracts.mdx","title":"Module Contracts","description":"In CWScript, native blockchain modules are exposed as module contracts, meaning you interact with them as if they were simply smart contracts.","sidebar":"langSidebar"},"lang/query":{"id":"lang/query","title":"Query","description":"Querying a Contract","sidebar":"langSidebar"},"lang/types/address":{"id":"lang/types/address","title":"Address","description":"Syntax","sidebar":"langSidebar"},"lang/types/string":{"id":"lang/types/string","title":"String","description":"","sidebar":"langSidebar"},"projects":{"id":"projects","title":"Projects","description":"CWScript projects organize related source files, tests, deployment scripts, dependencies and tool settings, etc."},"rust-ffi":{"id":"rust-ffi","title":"Rust FFI","description":""},"tutorial/pt1":{"id":"tutorial/pt1","title":"Part 1: My First Contract","description":"","sidebar":"docsSidebar"},"tutorial/pt2":{"id":"tutorial/pt2","title":"Part 2: Custom Token & NFT","description":"","sidebar":"docsSidebar"},"tutorial/pt3":{"id":"tutorial/pt3","title":"Part 3: Tic-Tac-Toe Tournament","description":"","sidebar":"docsSidebar"},"tutorial/pt4":{"id":"tutorial/pt4","title":"Part 4: Web UI","description":"","sidebar":"docsSidebar"}}}')}}]);